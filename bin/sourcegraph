#!/usr/bin/env node

/**
 * This tiny wrapper file checks for debug flags and appends them
 * when found, before invoking the "real" sourcegraph.js(1) executable. Idea
 * taken from mocha(1)
 */

var spawn = require('child_process').spawn
  , args = [ __dirname + '/_sourcegraph' ]

process.argv.slice(2).forEach(function (arg) {
  switch (arg) {
  case '-d':
    args.unshift('debug')
    break;
  case 'debug':
  case '--debug':
  case '--debug-brk':
    args.unshift(arg)
    break
  default:
    args.push(arg)
  }
})

spawn('node', args, { 
  // This will forward all outputs to the main process
  stdio: [0,1,2] 
}).on('exit', function (code, signal) {
  process.exit(code)
})